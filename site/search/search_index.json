{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Bits and Bolts \ud83d\ude80","text":"<p>Welcome to my blog about wrenching, coding, and microelectronics projects! This is where I document my adventures in turning wrenches, writing code, and building circuits.</p>"},{"location":"#what-youll-find-here","title":"What You'll Find Here","text":""},{"location":"#wrenching-projects","title":"\ud83d\udd27 Wrenching Projects","text":"<p>Classic car restoration and mechanical projects. Currently working on a 1968 Thunderbird restoration.</p>"},{"location":"#coding-projects","title":"\ud83d\udcbb Coding Projects","text":"<p>Software tools and automation projects, including NEMO lab management tools and AI chatbots.</p>"},{"location":"#microelectronics","title":"\u26a1 Microelectronics","text":"<p>Modern electronics integration for classic cars and embedded systems projects.</p>"},{"location":"#general-knowledge","title":"\ud83d\udcda General Knowledge","text":"<p>Daily learnings, project ideas, and miscellaneous thoughts.</p>"},{"location":"#quick-navigation","title":"Quick Navigation","text":"<ul> <li>Coding Projects - Software and automation tools</li> <li>Wrenching Projects - Mechanical and restoration work</li> <li>Microelectronics - Electronics and embedded systems</li> <li>General - Learnings and ideas</li> </ul> <p>Last updated: August 26, 2025</p>"},{"location":"coding/","title":"Coding Projects","text":"<p>Welcome to the Coding Projects section! Here you'll find all my programming adventures and tools.</p>"},{"location":"coding/#nemo-projects","title":"NEMO Projects","text":"<ul> <li>NEMO Merger Work Log - Merger tool for NEMO files</li> <li>NEMO to Drive Integration - NEMO to Google Drive integration</li> </ul>"},{"location":"coding/#chatbot-tools","title":"ChatBot Tools","text":"<ul> <li>Meeting Notes Bot - AI-powered meeting note generation</li> <li>Work Log Bot - Automated work logging system</li> </ul>"},{"location":"coding/#about-this-section","title":"About This Section","text":"<p>This section covers all my software development projects, from lab management tools to AI chatbots. Each project includes detailed work logs and technical notes.</p>"},{"location":"coding/nemo-merger/","title":"NEMO Merger Work Log","text":""},{"location":"coding/nemo-merger/#project-overview","title":"Project Overview","text":"<ul> <li>SNF and SNSF are merging and we need to have a unified lab management system, here we go</li> </ul>"},{"location":"coding/nemo-merger/#current-tasks","title":"Current Tasks","text":"<ul> <li>Doing a gap analysis, getting all the requests together </li> <li>Figuring out what to report at Thursday Meeting</li> </ul>"},{"location":"coding/nemo-merger/#procedure-for-future-alex","title":"Procedure for Future Alex","text":"<ul> <li>Downloading the current SNF users and adding the area access to Allen they need</li> <li>Adding accounts</li> <li>Downloading the accounts so you can then map those to the projects you're going to upload</li> <li>Upload the tools (anytime, I might want to organize them in NEMO-Plan, then move that hierarchy to live NEMO)</li> </ul>"},{"location":"coding/nemo-merger/#grant-questions","title":"Grant Questions:","text":"<ul> <li>do you actually want SNL or whatever in the tool name?</li> <li>NO want to purge any instances of SNL, SNC, SMF</li> <li>How are the area access going to work, what tool goes where?</li> <li>Reconviene and understand how area access if going to work, what do the characterization people want? Each tool can be different, does each tool need to be its own area or is there another way?</li> <li>list of consumables to upload?</li> <li>in the inventory.txt file</li> <li>How do we want to organize the consumables so people know where they are?</li> <li>Add TEM supplies, more under AFM supplies, SMF supplies, XPS supplies (software licencse?)</li> <li>For the rates, is there ever a difference between the other academic and local category?</li> <li>No, one in the same</li> <li>Do you specify any SBIR rates?</li> <li>No, we might not either pretty soon LOL</li> <li>Send me interlock i.p address list!</li> </ul>"},{"location":"coding/nemo-merger/#work-log","title":"Work Log","text":""},{"location":"coding/nemo-merger/#08212025","title":"08/21/2025","text":"<ul> <li>My \"add allen prefix\" went a bit wild and added the prefix to the wrong things so I corrected it and moved the Shriram/Spilker all that to the right category</li> </ul>"},{"location":"coding/nemo-merger/#08122025","title":"08/12/2025","text":"<ul> <li>the staff charges and tool training charges were previously set to be global, so only one staff chaarge and one staff training charge could exist</li> <li>Seems to be some kind of bug, can't make staff charges tool by tool</li> <li>Changed the tool hierarchy so everything in the SNF is now under Allen</li> <li>Up Next is adding the access areas like Grant and I talked about</li> </ul>"},{"location":"coding/nemo-merger/#08112025","title":"08/11/2025","text":"<ul> <li>Started working on the gap analysis, honestly too hard to think of all the gaps</li> <li>Started coding instead, uploaded all the tools under the category SNSF</li> <li>I'm slowly finding the roots of things</li> <li>for example I'd like to upload users, but first I thought to Upload PTAs, but to upload those you need a to upload accounts</li> <li>So far I've uploaded all the tools, added Allen to our lab members, </li> <li>Mapping for new area access: </li> <li>SMF = </li> <li>SNC = </li> <li>SNL</li> </ul>"},{"location":"coding/nemo-merger/#september-1st-goals","title":"September 1st Goals:","text":"<p>-Minimum:     - Gap analysis (consolidating thoughts)     - All Tools Into Merged NEMO, everyone has access - Order of operations:   - Meet up with Grant/Carsen, figure out the access areas   - Do a skeleton framework for tools   - Education sessions with tool owners so they can configure their tools   - SNSF review everything! I did my best to translate what I saw to NEMO language but it must be perfect on Jan 1st   - Creating Billing documents to share with admin team (what do we already have?)</p>"},{"location":"coding/nemo-merger/#thinking","title":"Thinking","text":"<ul> <li>What's the order of operations for getting all the new users into NEMO?</li> <li> <p>People are complicated, maybe I'll start with the tools</p> </li> <li> <p>What do people need to do versus what can I code?</p> </li> <li> <p>Migration:</p> </li> <li>Getting tools, users, PTAs, everything into SNF NEMO</li> <li>Configuration</li> <li>Tool owners setting up their tools</li> <li>Areas</li> <li>Education</li> <li>Billing</li> <li>Staff education</li> </ul>"},{"location":"coding/nemo-merger/#timeline","title":"Timeline","text":"<ul> <li>Phase 1 (Date):</li> <li>Phase 2 (Date):</li> <li>Phase 3 (Date):</li> </ul>"},{"location":"coding/nemo-merger/#known-issueschallenges","title":"Known Issues/Challenges","text":""},{"location":"coding/nemo-merger/#up-next","title":"Up Next","text":""},{"location":"coding/nemo-to-drive/","title":"NEMO to Drive Work Log","text":""},{"location":"coding/nemo-to-drive/#project-overview","title":"Project Overview","text":"<ul> <li>Script to automatically transfer files from NEMO to Google Drive</li> </ul>"},{"location":"coding/nemo-to-drive/#current-tasks","title":"Current Tasks","text":"<ul> <li>Getting a basic billing NEMO to drive set up on the VM</li> </ul>"},{"location":"coding/nemo-to-drive/#up-next","title":"Up Next","text":""},{"location":"coding/nemo-to-drive/#work-log","title":"Work Log","text":""},{"location":"coding/nemo-to-drive/#08072025","title":"08/07/2025","text":"<ul> <li>The billing seems to be working nicely which is cool</li> <li>Started working on getting the post usage question data out and onto the drive, that seems to be working well. Just a lot of data processing steps</li> <li>Need to move it to the collector and then it'll be sorted</li> <li>My tool/user list is static as well so if i wanted it to be really robust I'd also have it update the tool and user lists</li> </ul>"},{"location":"coding/nemo-to-drive/#0862025","title":"08/6/2025","text":"<ul> <li>Haha you thought! Changed everything over to run on the shared drive using a service account. You must use a shared Google drive if you are going to use a Service account bot buddy</li> <li>I clobbered the old instance on the collector and pulled a new version down once I figured out the whole new authentication scheme</li> <li>Also cleaned up the repo, It's be cool to share it some time</li> </ul>"},{"location":"coding/nemo-to-drive/#0852025","title":"08/5/2025","text":"<ul> <li>never really done am I? The .env was not being correctly loaded in the cron job because there were spaces between the variable names and the actual key, so it wasn't working</li> <li>My scheduling was also whack and it was running at 8 minutes and 20 minutes past the hour, which I never remember setting. maybe I though 8am and 20:00=8pm? Anyways I changed it to run every hour cause why not</li> <li>I'm wondering if I should put a bit more work into this to make it something other people can implement in other labs. That said, the whole google auth thing is a bit of a pain so it isn't for the faint of heart</li> </ul>"},{"location":"coding/nemo-to-drive/#08042025","title":"08/04/2025","text":"<ul> <li>made modifiactions to the bash script that does the master upload, seems to be working</li> <li>had to add steps to it compies the files to the nemo_automation folder, it also creates a venv automatically now, in later versions of the set up script</li> <li>I guess this project is done for now, until it breaks or we need new functionality</li> </ul>"},{"location":"coding/nemo-to-drive/#07282025","title":"07/28/2025","text":"<ul> <li>Modified the existing script so that it can be run on a VM (or on the collector)</li> <li>I deleted the token and reauthenticated, and now things work OK.</li> </ul>"},{"location":"coding/nemo-to-drive/#back-burner","title":"Back Burner","text":"<ul> <li>Making it publishable?</li> </ul>"},{"location":"coding/chatbot/WorkLog/","title":"Nano Chatbot","text":"","tags":["ai","work-log","automation"]},{"location":"coding/chatbot/WorkLog/#project-overview","title":"Project Overview","text":"","tags":["ai","work-log","automation"]},{"location":"coding/chatbot/WorkLog/#current-tasks","title":"Current Tasks","text":"<ul> <li>Creating a new repo, pushing my project there</li> <li>Setting up the interactive interpreter window</li> <li>Looking into the chunking, embedding, retrieval. How useful are metadata tags really?</li> <li></li> </ul>","tags":["ai","work-log","automation"]},{"location":"coding/chatbot/WorkLog/#up-next","title":"Up Next","text":"<p>-</p>","tags":["ai","work-log","automation"]},{"location":"coding/chatbot/WorkLog/#to-do","title":"To-do","text":"<ul> <li>adding a query classification that classifies the query more broadly, pulls key words, etc</li> <li>retrieval: using the improved query classification to retrieve a bunch of docs</li> <li>Hybrid search maybe</li> <li>using cohere to compare what really matters for the query</li> <li> <p>THEN with the cohere filtered results send that out for LLM</p> </li> <li> <p>Is there a way of just doing key word search? </p> </li> <li>does it make sense to first re-word the prompt?</li> <li>Might need PGvector scale? for hybrid search? Cohere?</li> <li>Cohere makes sure that what you have retrieved is relevant</li> <li>Starting smaller, looking at it one doc, one chunk at a time<ul> <li>Did it retrieve the metadata properly, did it classify the query?</li> <li>Start with simple, vector search related questions, or simple metadata questions</li> <li>Really see what it did each step of the way</li> </ul> </li> <li>Need to analyze each step of the process</li> <li>using pydantic to enfore types. Make base model class, each one is a string, makes 100% sure that we never deviate</li> <li>Moving all this to a super computer, off the local computer</li> <li>whever you added openAI calls, add the logfire call</li> <li>might not need such fine grained metadata, if you have good query classification and bring back a ton of docs. Then you only have to worry about broader conepts like document type</li> <li>Once we start holding things in memory, we're better able to chat back and forth, massive context window</li> <li>We can release something when we really have something to give</li> <li>Inerface where people can drag and drop stuff and have it be classified and ingested </li> </ul>","tags":["ai","work-log","automation"]},{"location":"coding/chatbot/WorkLog/#progress-log","title":"Progress Log","text":"","tags":["ai","work-log","automation"]},{"location":"coding/chatbot/WorkLog/#08072025","title":"08/07/2025","text":"<ul> <li>so what I'm hearing from Sam is that I should just build whatever I want with the stuff she provided. I'm going to clone this into my own repo and just go hard on it, I'll push it into the other repo periodically, but I want to be on my own main branch and do what I want if this is going to be my project</li> </ul>","tags":["ai","work-log","automation"]},{"location":"coding/chatbot/WorkLog/#07222025","title":"07/22/2025","text":"<ul> <li>further broadend the metadata, removed the Operating instruction tag and am just calling thinfgs \"guides\" there is too much overlap in the documents</li> <li>Also not sure about \"Procedure\" vs \"Guide\", </li> <li>Added document logging so we can see what we've processed so far</li> <li>Proccessed 47 documents from local doc to vectorization and metadata, and it went way way faster than it has in the past. Took like 3-4 hours where in the past it took all night to only do half. Not sure if that is becasue of the upgrade to pydantic V2 or maybe doclin g got better. I don't remember explicitly upgrading anything so I'm not sure why this changed</li> </ul>","tags":["ai","work-log","automation"]},{"location":"coding/chatbot/WorkLog/#07212025","title":"07/21/2025","text":"<ul> <li>Updated the metadate fields to be broader, more applicable to other groups</li> <li>implemented a hybrid pydantic/yaml approach so you only need to choose the metadata values in the yaml file</li> <li>For the metadata validation, moved to a case normalization/fuzzy matching method. I don't want to have to write similar or approximate names anywhere</li> <li>did work removing the metadata fields that were hard coded into a lot of file. It's only driven by the yaml file now.</li> <li>absolutely battled how pydantic treats its /env variables. I think I upgraded to pydantic V2 accidentally or something</li> <li>re-wrote a lot of the settings files to get the .env to work right with pydantic</li> </ul>","tags":["ai","work-log","automation"]},{"location":"coding/chatbot/WorkLog/#how-does-this-thing-work","title":"How does this thing work?","text":"","tags":["ai","work-log","automation"]},{"location":"coding/chatbot/WorkLog/#docling-conversion","title":"Docling Conversion:","text":"","tags":["ai","work-log","automation"]},{"location":"coding/chatbot/WorkLog/#meta-data-processing","title":"Meta Data Processing:","text":"","tags":["ai","work-log","automation"]},{"location":"coding/chatbot/WorkLog/#1-metadata-field-definitions-yaml","title":"1. Metadata Field Definitions (YAML)","text":"<ul> <li><code>metadata_fields.yaml</code>: Defines metadata field names, types, and descriptions.</li> <li><code>standardized_values.yaml</code>: Lists allowed values and other field constraints.</li> </ul>","tags":["ai","work-log","automation"]},{"location":"coding/chatbot/WorkLog/#2-document-sent-to-llm","title":"2. Document Sent to LLM","text":"<ul> <li>Raw document text is passed to a Large Language Model (e.g., OpenAI).</li> <li>Prompt instructs the LLM to extract metadata based on the YAML schema.</li> </ul>","tags":["ai","work-log","automation"]},{"location":"coding/chatbot/WorkLog/#3-llm-returns-raw-metadata","title":"3. LLM Returns Raw Metadata","text":"<ul> <li>LLM outputs a dictionary of extracted metadata.</li> <li>These values may be inconsistent or messy.</li> </ul>","tags":["ai","work-log","automation"]},{"location":"coding/chatbot/WorkLog/#4-standardization","title":"4. Standardization","text":"<ul> <li>Each metadata value is:</li> <li>Normalized (lowercased, trimmed, punctuation removed).</li> <li>Fuzzy matched against allowed YAML values.</li> <li>If a close match is found, it\u2019s replaced with the canonical value.</li> <li>Otherwise, the value is set to <code>None</code> or left unchanged based on logic.</li> </ul>","tags":["ai","work-log","automation"]},{"location":"coding/chatbot/WorkLog/#5-pydantic-validation","title":"5. Pydantic Validation","text":"<ul> <li>A Pydantic model is dynamically generated from the YAML schema.</li> <li>Enforces:</li> <li>Correct field names.</li> <li>Correct types.</li> <li>Valid values (for constrained fields).</li> <li>Invalid entries raise an error.</li> </ul>","tags":["ai","work-log","automation"]},{"location":"coding/chatbot/WorkLog/#6-result","title":"6. Result","text":"<ul> <li>Output is a clean, validated, and standardized metadata dictionary.</li> <li>Ready for storage**, search, or display.</li> </ul>","tags":["ai","work-log","automation"]},{"location":"coding/chatbot/WorkLog/#summary","title":"Summary","text":"Component Role YAML Source of truth for fields, types, and constraints LLM Extracts metadata from raw text Standardizer Cleans and corrects extracted values Pydantic Enforces types and constraints for final validation","tags":["ai","work-log","automation"]},{"location":"coding/chatbot/WorkLog/#accomplishments","title":"Accomplishments","text":"<ul> <li>changing the metadata tags so that they are more broad, can be applied to more labs</li> <li>enforcing the metadata tags more smartly with a hybrid yaml/pydantic model</li> <li>cleaned it up so that the meta data info is just in the yaml files</li> <li>Making a logging file so that docling doesn't re-process things</li> </ul>","tags":["ai","work-log","automation"]},{"location":"coding/chatbot/WorkLog/#known-issues","title":"Known Issues","text":"","tags":["ai","work-log","automation"]},{"location":"coding/chatbot/meeting_notes/","title":"Meeting Notes Bot","text":"","tags":["ai","meeting-notes","automation"]},{"location":"coding/chatbot/meeting_notes/#meeting-notes","title":"Meeting Notes:","text":"","tags":["ai","meeting-notes","automation"]},{"location":"coding/chatbot/meeting_notes/#08072025","title":"08/07/2025","text":"<ul> <li>Sam has taken on undergrads, they seem text book oriented</li> <li>Worked with them on simplified chunking and embedding, crawl4AI</li> <li>Doclings hybrid chunker was all over the place</li> <li>Best practices for chunking: </li> <li>How do we want to work together: </li> <li>Mary wants Sam to guide it, doesn't want her to do it</li> <li>Use it as I see fit</li> <li>Just go off on my own branch and go hard</li> <li>If I give away anything just let Sam know</li> <li>Chunking methodology:</li> <li>Trying to do re-ranking, written and trained re-ranking models</li> <li>Worries that as soon as you use an LLM, you have probabilities to deal with</li> <li>LangChain has the text splitter, has some fancy and not fancy methods<ul> <li>Not fancy: aggregate chunk based on tokens</li> </ul> </li> <li>Hybrid chunker: first finds headings, new paragraphs, end in a period</li> <li>This results in very small chunks, not so useful!</li> <li>Cohere is working on the vectorization of things, when you put it in the db are you retrieing it if you need it</li> <li>Massive context windows are great but it has to retrieve the info before it can get the info from</li> <li>Pages composed of lots of components, if you're extracting based on character count you'll break tables apart and other stuff that's important</li> <li>Looking into objects in general is useful</li> <li>A lot of people emulate how OpenAI does their vector search for their assistants</li> <li>read their \"How it works\", follow those steps! ( we walk through the steps)</li> <li>Cohere is good for the last step, the re-ranking</li> <li>Chunk overlap should be around 50%</li> <li>Merge peers: if you get a small chunk, merge it with another</li> <li>look up LangChain Text Splitting<ul> <li>Recursive character text splitting</li> </ul> </li> <li>Get into the interactive interpreter window!</li> <li>document is a Langchain object, you can dump it because it has a basemodel structure</li> <li>Everyone uses pydantic objects, OpenAI will return it to you</li> <li>extract out list of tables so you don't chunk those</li> </ul> <p>please go through it -- it will give you a idea about the chunking step of this RAG process: https://www.youtube.com/watch?v=8OJC21T2SL4 This guys \"ChunkViz\" seems useful!! https://chunkviz.up.railway.app/ and here are the three methods in LangChain that I want you to try out: https://python.langchain.com/docs/how_to/character_text_splitter/ https://python.langchain.com/docs/how_to/recursive_text_splitter/ https://python.langchain.com/docs/how_to/markdown_header_metadata_splitter/ I would like us to use #2, and #3... but #1 is the intro that I want you to start with.</p>","tags":["ai","meeting-notes","automation"]},{"location":"general/","title":"General","text":"<p>Welcome to the General section! Here you'll find miscellaneous thoughts, learnings, and ideas.</p>"},{"location":"general/#learning-knowledge","title":"Learning &amp; Knowledge","text":"<ul> <li>Today I Learned - Daily discoveries and insights</li> </ul>"},{"location":"general/#ideas-planning","title":"Ideas &amp; Planning","text":""},{"location":"general/#about-this-section","title":"About This Section","text":"<p>This section contains general knowledge, daily learnings, and long-term project ideas that don't fit into the other categories.</p>"},{"location":"general/Today-I-Learned/","title":"Today I Learned","text":"<p>I'm learning just all the time and I think it's cool to look back and see what you learned and when. Just a simple list. </p>","tags":["learning","knowledge","daily"]},{"location":"general/Today-I-Learned/#learnings","title":"Learnings","text":"","tags":["learning","knowledge","daily"]},{"location":"general/Today-I-Learned/#08292025","title":"08/29/2025","text":"<ul> <li>You can use an ESP32 C3 with CAN, you just need a module that goes from SPI to CAN. Lots of these modules already exist and hace the transmitter built in. </li> </ul>","tags":["learning","knowledge","daily"]},{"location":"general/Today-I-Learned/#08282025","title":"08/28/2025","text":"<ul> <li>Temportary Voltage Spike diodes and how they work. They're like blow off valves for high instantaneous voltage spikes. I'll need to put one infront of my buck converter in my display</li> </ul>","tags":["learning","knowledge","daily"]},{"location":"general/Today-I-Learned/#08272025","title":"08/27/2025","text":"<ul> <li>Google cloud shell and how to set up cron jobs to turn the VM on an off. No need for it to stay on all the time just to run a job a couple times a day!</li> </ul>","tags":["learning","knowledge","daily"]},{"location":"general/Today-I-Learned/#08242025","title":"08/24/2025","text":"<ul> <li>RTOS and how that works, like FreeRTOS. I don't think I need it for any of my current work, but cool to know it exists</li> <li>Learned how to do GD&amp;T in OnShape for the yoshimura flange project, to get it on the blog</li> </ul>","tags":["learning","knowledge","daily"]},{"location":"general/Today-I-Learned/#08232025","title":"08/23/2025","text":"<ul> <li>Spanish Moss does not natively grow in California, it's acutally a lichen called lace lichen, and it's the state lichen of California. The more you know!</li> </ul>","tags":["learning","knowledge","daily"]},{"location":"general/Today-I-Learned/#08202025","title":"08/20/2025","text":"<ul> <li>mkdocs is the truth, started learning about how to lay out a blog using it instead of github pages themes</li> </ul>","tags":["learning","knowledge","daily"]},{"location":"general/Today-I-Learned/#08172025","title":"08/17/2025","text":"<ul> <li>working with github pages I started learning about layouts of webpages and .scss files</li> </ul>","tags":["learning","knowledge","daily"]},{"location":"general/Today-I-Learned/#08102025","title":"08/10/2025","text":"<ul> <li>I learned about jumbo mortgage loans, anything above about $1.1 million in the bay area</li> </ul>","tags":["learning","knowledge","daily"]},{"location":"general/Today-I-Learned/#08052025","title":"08/05/2025","text":"<ul> <li>the google Oath doesn't work so well with a headless set up like in cron job. It needs to constantly open new oprts or whatever on the local host for authentication. It would work for a couple hours and then silently fail</li> <li>Service accounts are the way to go for Cron Jobs</li> </ul>","tags":["learning","knowledge","daily"]},{"location":"general/Today-I-Learned/#08052025_1","title":"08/05/2025","text":"<ul> <li>Messing with the cron job I feel like I have a much better grasp of interacting with the terminal and using nano to modify files. I don't know many commands but definiely the common useful ones. </li> </ul>","tags":["learning","knowledge","daily"]},{"location":"general/Today-I-Learned/#08042025","title":"08/04/2025","text":"<ul> <li>there are limits to the max power your wifi is allowed to have, set by the FCC. Basically if any one person has too powerful a device it can mess things up for everyone</li> <li>You can buy ESP32s without the integrated wifi antenna, and plug your own antennae in.</li> <li>The C3s just have totally horrible antenna, they don't connect for shit</li> <li>The programming language GO, I wonder if it could help me speed up some algo stuff. </li> <li>cronjobs, set up my first one on the collector computer</li> </ul>","tags":["learning","knowledge","daily"]},{"location":"general/Today-I-Learned/#07302025","title":"07/30/2025","text":"<ul> <li>learned about serial communications, man that stuff is cool. Synchronous, a synchronous, UART, I2C, SPI. It's like you use it and kinda know what's happening but cool to learn it</li> </ul>","tags":["learning","knowledge","daily"]},{"location":"general/Today-I-Learned/#07282025","title":"07/28/2025","text":"<ul> <li>MQTT and how that works, kinda</li> <li>Started learning about PRAM and the best way to drive displays</li> <li>Sometimes deleting a token and reauthenticating is the way to go</li> <li>Manually advancing the LVGL clock will solce your problems</li> <li>Started learning about Data Structures and algorithms. Learned about \"bigO\" and the complexity of running nested loops, like how that increases exponentially</li> <li>Kinda started on recursive algorithms but those my my head in a knot</li> </ul>","tags":["learning","knowledge","daily"]},{"location":"general/Today-I-Learned/#07252025","title":"07/25/2025","text":"<ul> <li>reflecting on a past learning, I got all mad at the higher ups because they weren't doing shit, but sometimes the higher ups are also fed up because their higher ups aren't doing shit. So while it's important for your voice to be heard, maybe give them the benefit of the doubt. Maybe. </li> </ul>","tags":["learning","knowledge","daily"]},{"location":"general/Today-I-Learned/#07242025","title":"07/24/2025","text":"<ul> <li>learned about glancing angle xray spectroscopy for very thin films</li> </ul>","tags":["learning","knowledge","daily"]},{"location":"general/Today-I-Learned/#07232025","title":"07/23/2025","text":"<ul> <li>in PlatformIO and C/C++ header files are a lot like modules in python. Or like utils so that's where you put stuf you want to use globally</li> <li>I think I learned about build flags, but not sure I get it yet</li> <li>if there's errors in your IDE and lots of red lines it probably means your shit is broken</li> <li>learned about MISO, MOSI, IRQ, and general SPI interface stuff</li> </ul>","tags":["learning","knowledge","daily"]},{"location":"general/Today-I-Learned/#07222025","title":"07/22/2025","text":"<ul> <li>If you need .env and pydantic is being a dick about it, just export it</li> </ul>","tags":["learning","knowledge","daily"]},{"location":"general/Today-I-Learned/#07212025","title":"07/21/2025","text":"<ul> <li>Started this blog! learned about Jekyll and hosting pages on GitHub. I feel cool</li> <li>Pydantic is useful because it can super quickly enforce things. You could write lengthy code to enforce types, but Pydantic reduces the boilerplate code you need</li> </ul>","tags":["learning","knowledge","daily"]},{"location":"general/Today-I-Learned/#07202025","title":"07/20/2025","text":"<ul> <li>The best way to remove bushings is to destroy them</li> <li>always start by heating the rubber to get it to release from the metal</li> <li>Push out the rubber, or drill it out, or if you want cancer sooner just burn it out and carbonize it</li> <li>Then remove the shell of the bushing by cutting a groove in it and hammering it out</li> <li>Air hammers work ok, not as well as you'd want. Maybe mine just isn't that strong</li> </ul>","tags":["learning","knowledge","daily"]},{"location":"general/Today-I-Learned/#07192025","title":"07/19/2025","text":"<ul> <li>You can bend the hell out of a control arm with a hydralic press. You can't just push the center of a bushing as hard as you can and hope it pops out</li> <li>MOSI/MISO. Master in slave out, slave out master in. </li> <li>About the stack of code you need to go from arduino IDE to a proper gui</li> <li>It's the driver for the screen, then a graphics package (like LVGL), and then a GUI editor</li> <li>Screens are actually kind of hard</li> <li>It's a pain in the ass to set up arduino IDE in VS Code or Cursor</li> </ul>","tags":["learning","knowledge","daily"]},{"location":"general/Way-Backburner/","title":"Project Ideas and Experiments","text":"","tags":["ideas","planning","future-projects"]},{"location":"general/Way-Backburner/#mechanical-projects","title":"Mechanical Projects","text":"<ul> <li>Repurpose a 3D printer into a CNC router  </li> <li>3D print:</li> <li>Dimple dies  </li> <li>Cone expander  </li> <li>Watch holder  </li> <li>Fuse 3D printed filament together (e.g. splicing/joining technique)</li> <li>Set up digitization station for diaries  </li> </ul>","tags":["ideas","planning","future-projects"]},{"location":"general/Way-Backburner/#programming-software","title":"Programming / Software","text":"<ul> <li>NEMO Features</li> <li>Leaderboard for Amoun  </li> <li>Publications feature: scrape ArXiv and cross-reference lab members  </li> <li>Create NEMO data dashboard  </li> <li>Add processing techniques from ArXiv to repository  </li> <li>Smart Assistants &amp; Bots</li> <li>Voice commands to interact with the Thunderbird (e.g. ask car status)  </li> <li>Scrape personal emails to create a personalized email response bot  </li> <li>Productivity &amp; Quantified Self</li> <li>ESP32-CAM to monitor time spent at desk daily  </li> <li>Strava API: calories burned per day  </li> <li>Infrastructure &amp; Systems</li> <li>Pi-hole DNS for home  </li> <li>Inventory management system better than spreadsheets  </li> </ul>","tags":["ideas","planning","future-projects"]},{"location":"general/Way-Backburner/#microelectronics-embedded-systems","title":"Microelectronics / Embedded Systems","text":"<ul> <li>DIY 1.5V transistor radio  </li> <li>Voice notification system:</li> <li>Detect who walks by office or sits on couch (e.g. with ESP32-CAM or sensors)  </li> <li>Lucca Couch Sensor System</li> <li>Detect when Lucca is on the couch  </li> <li>LED or haptic feedback at desk  </li> <li>Smart Load Cell Scale</li> <li>Auto-tare with button  </li> <li>Average last X values  </li> <li>Faster polling if weight below threshold  </li> <li>Set variable as zero dynamically  </li> <li>Nixie tube clock  </li> </ul>","tags":["ideas","planning","future-projects"]},{"location":"general/Way-Backburner/#miscellaneous-fun","title":"Miscellaneous / Fun","text":"<ul> <li>\u201cPlayer Hater\u2019s Ball 2003 Parking\u201d sticker  </li> <li>RFID system for lab sample tracking  </li> <li>Jumbo Tron for NEMO using Raspberry Pi  </li> </ul>","tags":["ideas","planning","future-projects"]},{"location":"microelectronics/","title":"Microelectronics Projects","text":"<p>Welcome to the Microelectronics Projects section! Here you'll find all my electronics and embedded systems work.</p>"},{"location":"microelectronics/#smart-vehicle-systems","title":"Smart Vehicle Systems","text":"<ul> <li>Smart Thunderbird Electronics - Modern electronics integration for classic cars</li> </ul>"},{"location":"microelectronics/#about-this-section","title":"About This Section","text":"<p>This section covers all my electronics work, from embedded systems to circuit design and modern technology integration into classic vehicles.</p>"},{"location":"microelectronics/Smart-T-Bird/","title":"Smart T bird work log","text":"<ul> <li>Smart T bird work log</li> <li>Project Overview</li> <li>Current Tasks</li> <li>Work Log<ul> <li>08/29/2025</li> <li>08/28/2025</li> <li>08/27/2025</li> <li>08/06/2025:</li> <li>08/2/2025:</li> <li>07/31/2025:</li> <li>07/30/2025:</li> <li>07/29/2025:</li> <li>07/28/2025:</li> <li>07/25/2025:</li> <li>07/24/2025</li> <li>07/23/2025</li> <li>07/22/2025</li> </ul> </li> <li>Road Map</li> <li>Scope of work:<ul> <li>Sensors and controllers I want:</li> </ul> </li> <li>Done</li> <li>Nodes:</li> </ul>","tags":["electronics","classic-car","modernization"]},{"location":"microelectronics/Smart-T-Bird/#project-overview","title":"Project Overview","text":"<ul> <li>I love me some data, micro electronics, and old cars so let's put them all together. </li> <li>My dream is to have temperature data, PWM control of fans, and a cool hidden display where I can see all the readouts and what everything is doing, and also manually override sensors if say I want to put a fan on full blast or whatever else</li> </ul>","tags":["electronics","classic-car","modernization"]},{"location":"microelectronics/Smart-T-Bird/#current-tasks","title":"Current Tasks","text":"<ul> <li>Getting the CAN working</li> <li>Think about the larger picture of nodes, what needs to go where. If we're using full fat ESP32 with CAN, maximizing the IO from each to minimize the numer of CAN wires</li> <li>Then we can think about the GUI, etc</li> </ul>","tags":["electronics","classic-car","modernization"]},{"location":"microelectronics/Smart-T-Bird/#work-log","title":"Work Log","text":"","tags":["electronics","classic-car","modernization"]},{"location":"microelectronics/Smart-T-Bird/#08292025","title":"08/29/2025","text":"<ul> <li>came up with a screen holder print I'm pretty proud of. I don't think I'll need the securing bolts after all</li> <li>Started looking at the perf board layout, it's a lot to wrap your head around. Have to be super methodical, there is a lot going on. </li> <li>Here's my pin out from the ESP:</li> <li>MOSI \u2192 GPIO23</li> <li>SCLK \u2192 GPIO18</li> <li>CS (chip select) \u2192 GPIO5 (can be any GPIO)</li> <li>DC (data/command) \u2192 GPIO16 (any GPIO)</li> <li>RST (reset) \u2192 GPIO17 (any GPIO)</li> <li>BLK/LED (backlight) \u2192 5V from buck converter</li> <li>TFT GND -&gt; MOSFET Gate, pin 25</li> <li>TX to CAN -&gt; 21</li> <li>RX to CAN -&gt; 22</li> <li>In from LDR -&gt; 32</li> <li>Additional considerations:</li> <li>Need resistor between the LDR and ground to adjust sensitivity</li> <li>Need resistor between PWM pin and gate of mosfet to not blow stuff up</li> </ul>","tags":["electronics","classic-car","modernization"]},{"location":"microelectronics/Smart-T-Bird/#08282025","title":"08/28/2025","text":"<ul> <li>Finished the ashtray holder 1.0 and printed it. I was a little bit tight in the width, and long in the length. My bolt holes also weren't all that exact. </li> <li>I decided to use M3 bolts directly into the PLA. Should be tight enough, especially becasue the screen kind of rests on the ashtray itself</li> <li>Made changes and have V 2.0 printing right now at the lab.</li> <li>Downloaded KiCAD. I think it's overkill for this project and I'll probably just use perf board, but I do love the sexyness of a real PCB. I kinda just want to create an MVP that works, and then I'll maybe make it nice. </li> </ul>","tags":["electronics","classic-car","modernization"]},{"location":"microelectronics/Smart-T-Bird/#08272025","title":"08/27/2025","text":"<ul> <li>Started designing the ashtray holder for the screen</li> </ul>","tags":["electronics","classic-car","modernization"]},{"location":"microelectronics/Smart-T-Bird/#08062025","title":"08/06/2025:","text":"<ul> <li>I Think I'm giving up on my wifi dreams and going CAN BUS like the rest of the automotive world</li> <li>I learned you must use a full blown ESP32 if you want to use can bus, the C3 and S3 don't natively speak canbus. </li> <li>And if you want to use CAN, you need a little break out board. Chat elegantly explained it as a walkie talkie. The ESPs already can communicate but they need the breakout board to send the message correctly. CAN does the whole high/low thing that the ESP can't drive</li> </ul>","tags":["electronics","classic-car","modernization"]},{"location":"microelectronics/Smart-T-Bird/#0822025","title":"08/2/2025:","text":"<ul> <li>still working on this wifi reliability thing, I think the c3 is just worse generally, maybe an antennae thing.</li> <li>uploaded the same SHT sketch to an esp32 (regular) and printed the wifi strength and in th kitchen right next to the AP the signal is like -68 dbm which isn't great, and then in the room it's -90 or less which is just terrible, could definitely contribute to the connectivity</li> <li>added lines in the softAP that explicitly sets the max power at 20W, and makes sure the wifi doesn't sleep or go into low pwower mode</li> <li>Considering either going to CAN Bus, which would make me a bit sad, or getting a stronger mini-AP, like an infrastructre spec one. </li> <li>Still trying to figure out if it's really a wifi strength thing or what. But I do feel like I'm asking a lot of the one little ESP to both drive a screen, touch polling, and set up a wifi network. </li> <li></li> </ul>","tags":["electronics","classic-car","modernization"]},{"location":"microelectronics/Smart-T-Bird/#07312025","title":"07/31/2025:","text":"<ul> <li>got the C3 working and talking to the broker pretty easily, but the connection isn't the most reliable. I did two things:</li> <li>Disabled the DCHP and assigned static IP addresses to the sensor nodes</li> <li>Set the wifi frequency so that it goes to the same frequency everytime</li> <li>I just want it to connect right away when powered up, and it doesn't matter if either lost power at any point or anything</li> <li>Before these changes, it might take 2-3 reboots to connect</li> </ul>","tags":["electronics","classic-car","modernization"]},{"location":"microelectronics/Smart-T-Bird/#07302025","title":"07/30/2025:","text":"<ul> <li>the TMP36 sensor seems pretty dang innacurate like there is a big offset of 15C, I guess this can have to do with the actual power supply voltage, the ADC quality, even noise from the wifi</li> <li>So I added an offset but idk if it's linear. Should still be close enough for non-mission critical stuff</li> <li>Also wrote code for an SHT sensor so I could measure office temperature, and further calibrate the TMP36</li> <li>Might still use the SHT31 code fo</li> </ul>","tags":["electronics","classic-car","modernization"]},{"location":"microelectronics/Smart-T-Bird/#07292025","title":"07/29/2025:","text":"<ul> <li>wired upt the TMP36 sensor, got it working easily enough</li> <li>learned about how the envirnmental variables work in PlatformIO</li> <li>Tried learning about how to structure much more complicated programs, there'll be a lot of nodes with different environments, and main.cpp files</li> </ul>","tags":["electronics","classic-car","modernization"]},{"location":"microelectronics/Smart-T-Bird/#07282025","title":"07/28/2025:","text":"<ul> <li>HAHA I WON! got the touch working with LVGL, it was all about lvgl not \"moving forward\" in time like it wasn't actually polling the screen. Everything was configured correctly, good wiring, LVGL just wasn't checking the screen if you can believe it</li> </ul>","tags":["electronics","classic-car","modernization"]},{"location":"microelectronics/Smart-T-Bird/#07252025","title":"07/25/2025:","text":"<ul> <li>Still battling the touch screen in LVGL, just seems like a set up issue</li> <li>I deleted any mention of the esp32-C3 from the ini file, don't want to confuse anything</li> <li>Copied the suggested lv_conf.h from lvgl folder, so it's much more fine grained control</li> <li>removed the \"build simple\" build flag from the .ini, to make sure it uses my lvgl_config.h</li> <li>Commented out another lv_conf.h file that I found in the .pio/lvgl folder. I don't want it getting confused with different conf files.  </li> </ul>","tags":["electronics","classic-car","modernization"]},{"location":"microelectronics/Smart-T-Bird/#07242025","title":"07/24/2025","text":"<ul> <li>Got the touch screen working, but the component that integrates to LVGL is still not working. Not sure how those are related</li> <li>It works when I set the Baug rate to 96000 but not the default 115200, but I may just try that again</li> <li>LVGL and the regular touch out are related but different somehow. Like there is different code for LVGL to recognize a touch</li> <li>reducing the touch sensitivity to 100 from 600 could be a good thing, really light touch is kind of nice</li> </ul>","tags":["electronics","classic-car","modernization"]},{"location":"microelectronics/Smart-T-Bird/#07232025","title":"07/23/2025","text":"<ul> <li>short guide to PlatformIO</li> </ul> Folder/File Purpose/Contents .pio/ Build output, temporary files (auto-generated) include/ Project-wide header files lib/ Custom libraries src/ Main source code test/ Unit tests platformio.ini Project configuration","tags":["electronics","classic-car","modernization"]},{"location":"microelectronics/Smart-T-Bird/#-first-day-of-platformio-and-i-got-the-lvgl-demo-working-albeit-with-no-touch-yet-but-i-feel-great-about-it-learned-a-ton","title":"- first day of PlatformIO and I got the LVGL demo working, albeit with no touch yet but I feel great about it, learned a ton","text":"","tags":["electronics","classic-car","modernization"]},{"location":"microelectronics/Smart-T-Bird/#07222025","title":"07/22/2025","text":"<ul> <li>made a branch in Jeff's repo for my PlatformIO project, I think that is the way to go as opposed to Arduino CLI + VSCode. I just don't want to have to configure everything manually sounds scary</li> <li>Started playing with PlatformIO</li> </ul>","tags":["electronics","classic-car","modernization"]},{"location":"microelectronics/Smart-T-Bird/#road-map","title":"Road Map","text":"<ul> <li>ESP32 C3 reading temperature</li> <li>Broker talking to the C3 node</li> <li>two way communication, turn LED on and off</li> <li>OTA updates</li> <li>advanced features like PWM</li> <li>Power and wiring from car</li> <li>Planning sensor nodes, perfboard</li> </ul>","tags":["electronics","classic-car","modernization"]},{"location":"microelectronics/Smart-T-Bird/#general-notes","title":"General notes:","text":"<ul> <li>Screen pinout, from 1-X</li> <li>VCC</li> <li>GND</li> <li>CS</li> <li>Reset</li> <li>DC/RS</li> <li>MOSI</li> <li>SCK</li> <li>LED</li> <li>MISO</li> <li>T_ClK</li> <li>T_CS</li> <li>T_DIN</li> <li>T_DO</li> <li>T_IRQ</li> </ul>","tags":["electronics","classic-car","modernization"]},{"location":"microelectronics/Smart-T-Bird/#scope-of-work","title":"Scope of work:","text":"","tags":["electronics","classic-car","modernization"]},{"location":"microelectronics/Smart-T-Bird/#sensors-and-controllers-i-want","title":"Sensors and controllers I want:","text":"<ul> <li>Coolant temp and PWM fan control</li> <li>Trans cooler temp and PWM fan control</li> <li>Oil Temperature</li> <li>Battery voltage</li> <li>Display that is getting all the data wirelessly from the sensor network</li> <li>The sensor should autodim based on light conditions</li> <li>Bonues</li> <li>Diff temp</li> <li>fuel pressure eventually</li> <li>drive shaft speed, could inform other parts of the project</li> <li>Back up camera using LIDAR</li> <li>Six axis IMU with a display for g forces and stuff</li> <li>figuring out how to log and or transmit this data somewhere</li> </ul>","tags":["electronics","classic-car","modernization"]},{"location":"microelectronics/Smart-T-Bird/#done","title":"Done","text":"<ul> <li>figuring out PlatformIO</li> <li>Creating a github repo (shout out jeff)</li> <li>wiring the touch screen</li> <li>getting basic touch working</li> <li>getting LVGL to read touch</li> <li>ESP32 reading temperature</li> <li>ESP32s talking to eachother using MQTT</li> <li>Broker ESP going with MQTT</li> <li>Most basic UI to display temp</li> <li>Getting the code working with the C3s</li> <li>Further Calibrating the TMP36</li> </ul>","tags":["electronics","classic-car","modernization"]},{"location":"microelectronics/Smart-T-Bird/#nodes","title":"Nodes:","text":"<ul> <li>Screen Controller:</li> <li> <p>Overview: Drives display, connected to the LDR for auto dimming, has a CAN transciever     | Sensor | From ESP32 | To ESP32 |     ---------|---------|-------------|     | light sensor | ??? | ??? |     |Display| SO MANY | ????|</p> </li> <li> <p>In center console:</p> </li> <li>Overview: Measurement ESP32 that lives in the ashtray or somewhere inside the car for interior measurement</li> <li>Measures: Inside temp and humidity, IMU, Battery Voltage, trans temp if it'll reach</li> <li> <p>Questions: Can we use the same buck converter and TVS to power two ESP32s?     | Sensor | From ESP32 | To ESP32 |     ---------|---------|-------------|     | SHT31 | pwr,grnd | SDA/SCLK|     | IMU | is it I2C? | ?????|     |Voltage | voltage divider| ???|</p> </li> <li> <p>Engine Bay:</p> </li> <li>Overview: Oil temp at pan, fan PWM, radiator temp, SHT31 (Ambient temp/humidity)</li> <li> <p>Sensors: 2x TMP36, SHT31, </p> Sensor From C3 To C3 TMP36 pwr, grnd Analog in TMP36 pwr, grnd Analog in SHT31 pwr,grnd SDA/SCLK Mosfet pull down resistor, PWM None </li> <li> <p>Trunk:</p> </li> <li>Overview: Back up camera, shows how far you are from whatever is behind you, run a temp sensor down to the diff</li> <li>Sensor: LiDAR backup   | Sensor | From C3 | To C3 |   --------|---------|-------   | Backup camera | I2C, UART | ???? |</li> </ul>","tags":["electronics","classic-car","modernization"]},{"location":"wrenching/","title":"Wrenching Projects","text":"<p>Welcome to the Wrenching Projects section! Here you'll find all my automotive restoration and repair adventures.</p>"},{"location":"wrenching/#classic-cars","title":"Classic Cars","text":"<ul> <li>1968 Thunderbird Restoration - Complete restoration of a classic T-Bird</li> </ul>"},{"location":"wrenching/#3d-models-stl-files","title":"3D Models &amp; STL Files","text":"<ul> <li>View All 3D Models - Custom 3D printed parts and tools for automotive projects</li> </ul>"},{"location":"wrenching/#about-this-section","title":"About This Section","text":"<p>This section covers all my hands-on mechanical work, from classic car restoration to general automotive repairs and modifications.</p>"},{"location":"wrenching/3d-models/","title":"3D Models &amp; STL Files","text":"<p>Welcome to the 3D Models section! Here you'll find all the custom 3D printed parts and tools I've designed for automotive projects.</p>"},{"location":"wrenching/3d-models/#how-to-use-these-models","title":"How to Use These Models","text":"<ol> <li>Browse the models below to see what's available</li> <li>Download the STL file you need</li> <li>Import into your 3D slicing software (Cura, PrusaSlicer, etc.)</li> <li>Print using the recommended settings</li> <li>Post-process as needed (sanding, painting, etc.)</li> </ol>"},{"location":"wrenching/3d-models/#print-settings","title":"Print Settings","text":"<p>Most parts are designed for: - Layer Height: 0.2mm - Infill: 20-30% - Supports: Where needed - Material: PLA/PETG recommended - Build Plate: 200\u00b0C, 60\u00b0C</p>"},{"location":"wrenching/3d-models/#thunderbird-restoration-project","title":"Thunderbird Restoration Project","text":""},{"location":"wrenching/3d-models/#rear-ashtray-blank-off-plate","title":"Rear Ashtray Blank Off Plate","text":"<p>Description: Custom blank off plate to replace the brittle rear ashtrays in the 1968 Thunderbird. Designed to just kind of cover the opening. I used 1/4\" VHB tape to stick it to the interior sheet metal trim</p> <p>STL File: Download STL</p> <p>Material: PLA/PETG Installation: VHB tape mounting Status: \u2705 Completed and installed Date Added: August 2024</p>"},{"location":"wrenching/3d-models/#windshield-wiper-knob","title":"Windshield Wiper Knob","text":"<p>Description: Replacement for the broken windshield wiper control knob. Matches the original design and fits the existing shaft.</p> <p>STL File: Download STL</p> <p>Material: PLA Installation: Press fit onto wiper control shaft Status: \u2705 Completed and installed Date Added: July 2024</p>"},{"location":"wrenching/3d-models/#center-console-cup-holder","title":"Center Console Cup Holder","text":"<p>Description: Custom cup holder insert that fits in the center console ashtray space. Designed to hold modern beverage containers. The center console isn't quite square, and neither is this, it does have a slight taper of the base to fit better. </p> <p>STL File: Download STL</p> <p>Material: PLA is fine, I've had no trouble with PLA inside my car. Installation: Sits in the center console, underneath the lockable arm rest  Status: \u2705 Completed and installed Date Added: August 2025</p>"},{"location":"wrenching/3d-models/#tooling","title":"Tooling","text":""},{"location":"wrenching/3d-models/#25-v-band-cap","title":"2.5\" v band cap","text":"<p>Description: A MALE cap designed to fit 2.5\" v-band flanges for purge welding. When welding stainless steel or other materials that require back-purging with inert gas, this cap creates a seal against the v-band flange. Includes a small port for gas outlet. The flow port is the decimal of the 2.5 on the face of the flange. I thought that was pretty clever. I designed this and never really tested it, not a big purge welding guy, just never really have the need. </p> <p>STL File: Download STL</p> <p>Material: PETG recommended for heat resistance Installation: Clamps onto v-band flange with standard clamp Status: \u2705 Tested and working Date Added: August 2024</p>"},{"location":"wrenching/3d-models/#2002-yamaha-fz-1","title":"2002 Yamaha FZ-1","text":""},{"location":"wrenching/3d-models/#yoshimura-flange-adapter","title":"Yoshimura Flange Adapter","text":"<p>Description: This one will probably get me a cease and desist but whatever. It's a flange to adapt a 2.5\" exhaust pipe, like say a midpipe on an FZ1, to the 3 bolt flange found on a Yoshimura RS3 muffler. You can send it to your favorit laser cutting service and they'll cut you one out of stanless steel to then weld onto your exhaust.</p> <p>STL File: Download STL</p> <p>Material: High-temp PETG or similar heat-resistant filament Installation: Bolts between stock header and slip-on using existing hardware Status: \u2705 Tested and working Date Added: July 2024</p>"},{"location":"wrenching/3d-models/#file-naming-convention","title":"File Naming Convention","text":"<p>All STL files follow this format:</p> <pre><code>project-part-description.stl\n</code></pre> <p>Examples: - <code>thunderbird-dash-mount.stl</code> - <code>thunderbird-switch-bracket.stl</code> - <code>general-tool-holder.stl</code></p>"},{"location":"wrenching/3d-models/#questions-or-requests","title":"Questions or Requests?","text":"<p>If you need a specific part designed or have questions about any of these models, feel free to: - Check the corresponding project page for details - Look at the print settings and material recommendations - Contact me for custom designs</p> <p>Last Updated: August 2024</p>"},{"location":"wrenching/thunderbird-restoration/","title":"1968 Thunderbird Work Log","text":""},{"location":"wrenching/thunderbird-restoration/#project-overview","title":"Project Overview","text":"<ul> <li>I bought this T-Bird froma buy in Watsonville, CA. Fired right up, had basically straight pipes with glass pack (cherry bomb) mufflers and it was loud as heck. Should have been a giveaway that something was really wrong when he told me it didn't have revers</li> </ul>"},{"location":"wrenching/thunderbird-restoration/#current-tasks","title":"Current Tasks","text":"<ul> <li>Getting an alignment with all my new steering parts</li> <li>New Wheels and Tires</li> </ul>"},{"location":"wrenching/thunderbird-restoration/#before-my-birthday-road-trip","title":"Before My Birthday Road Trip","text":"<ul> <li>Tire change kit</li> <li>organize spare kit</li> <li>securing liquids in trunk</li> <li>leaking trans (New fittings, hose)</li> <li>Vinyl wrap</li> <li>Bonus:</li> <li>Adding speakers to the back</li> <li>Oil Pan with turbo bung</li> </ul>"},{"location":"wrenching/thunderbird-restoration/#work-log","title":"Work Log","text":""},{"location":"wrenching/thunderbird-restoration/#08252024","title":"08/25/2024","text":"<ul> <li>printed another blank off plate, used the last of four different spools of white</li> </ul>"},{"location":"wrenching/thunderbird-restoration/#08242025","title":"08/24/2025","text":"<ul> <li>Designed and 3D printed a blank off plate for the rear ashtrays, use VHB tape and it's really stuck on there. Nice</li> </ul>"},{"location":"wrenching/thunderbird-restoration/#08202025","title":"08/20/2025","text":"<ul> <li>After a bit of time away, I received the rubber isolators and installed them. Behold, no more terrible rattle. </li> <li>I did notice that the \"top\" spring clip on both brake calipers was broken. I thought it was a feature the last few times I removed it, turns out just straight broken. I'll replace them some day maybe. I left the passenger side, and just removed the driver side to avoid it rattling around loose. I realized it on the second side, the drivers side</li> <li>Measured up the rear speaker area, the hole is somthing like 5\" square. Really unsure how it mounts</li> <li>removed the rear ashtrays, and added some foam strips to take up any slack between the metal and the bolstering that could cause a rattle</li> <li>I do like the ashtrays, but the plastic they are made out of is just so brittle and I don't think it's worth it to try and fix it. I'll design and 3D print a blank off plate so it looks complete</li> </ul>"},{"location":"wrenching/thunderbird-restoration/#08132025","title":"08/13/2025","text":"<ul> <li>Sometimes you just have to step away for a bit. It was the brakes!</li> <li>I did a test where I hit a bunch of bumps while very lightly hitting the brakes, not a rattle, certainley not the loose change sound</li> <li>I did some googling and it looks like I'm totally missing these rubber isolators that go on the slide pins. They weren't there when I took the brakes apart</li> <li>I can't wait for them to arrive, about a week though.</li> </ul>"},{"location":"wrenching/thunderbird-restoration/#08102025","title":"08/10/2025","text":"<ul> <li>Put everything back together, big day. </li> <li>It's all nice and tight in the suspension, but the rattle is still there!! I'm not sure what's causing it but I'll get to the bottom of it</li> <li>Double checked the shocks and everything, current though is that something is just loose inside the body work</li> <li>I also learned the parking break disengage is vacuum operated, so now that needs to be done manually if you want to remove the parking brake.</li> <li>The fucking rattle just can't be suspension related, there must be some loose bolts or something in there</li> </ul>"},{"location":"wrenching/thunderbird-restoration/#08082025","title":"08/08/2025","text":"<ul> <li>Started putting everything back on the car! This is the good bit where the painted shiny stuff goes together</li> <li>Everything went smooth, had to do some work jogging my memory on how the sway bar went in and how the brakes go together</li> <li>The drivers side crushed LCA definitely has more play than the other side, but I was able to tighten the bolt to the point where it grabbed the inner part of the bushing and will hold. </li> <li>Did my best to alight the UCAs where they were before, and keep the tie rods to the correct length. </li> <li>The strut rods are interesting becasue it seems like they aren't really meant to be adjusted. Often you have nuts on either side of the bushing to move the rod forward and back relative to the car, but this one doesn't have that. </li> <li>The strut rods don't line up with the LCA until you tigthen them down and pull them forward</li> <li>I'm refraining from tightening any bushings until it's sitting at ride height</li> </ul>"},{"location":"wrenching/thunderbird-restoration/#08072025","title":"08/07/2025","text":"<ul> <li>Sand balsted the tie rod adjusting sleeves and painted them, they look nice</li> </ul>"},{"location":"wrenching/thunderbird-restoration/#08062025","title":"08/06/2025","text":"<ul> <li>Sand blasted and painted the strut rods. </li> <li>Removed the tie rod ends, they were super easy to unthread which was surprising</li> <li>With the bare minimum of inner tie rods installed, I gave the rack a wiggle and everything else feels pretty gand tight. There is a little bit of lash in the steering box, but really quite good on the old car scale</li> <li>Not finding any good replacements for the bump stops but I don't think I'll let that hold me back, just gonna send it. They can be added later if I really want</li> </ul>"},{"location":"wrenching/thunderbird-restoration/#08042025","title":"08/04/2025","text":"<ul> <li>Started pressing in bushings, very satisfying</li> <li>even my wonky arm accepted the bushing with a little violence</li> <li>removed the strut rods, and the sway bar came out with it naturally. They're real rusty</li> <li>I'm missing some bump stops on the strut rod on one side, and I desproyed the one ot the UCA ball joint bolt accidentally</li> <li>I guess I wonder how necessary they are? I mean they were installed from factory so they must be a good-ish idea</li> <li>not sure if I can source replacements</li> </ul>"},{"location":"wrenching/thunderbird-restoration/#07252025","title":"07/25/2025","text":"<ul> <li>Just lots to paint, finished painting the control arms, brake brackets, hub dust cap, etc.</li> <li>Sandblasted and painted the rotor shields</li> </ul>"},{"location":"wrenching/thunderbird-restoration/#07242025","title":"07/24/2025","text":"<ul> <li>Continued sandblasting the control arms, painted them black</li> <li>Recieved the strut rod bushings</li> </ul>"},{"location":"wrenching/thunderbird-restoration/#07192025","title":"07/19/2025","text":"<ul> <li>started working on sand blasting and pushing the bushings outs. It went bad, I bent the fuck out of one of the arms with a hydraulic press. I felt bad. </li> <li>I fixed the hydraulic press too, just to mess my parts up</li> <li>Sand blasting went fine, the knuckles turned out really nice, and I just love cleaning stuff up on the sand blaster</li> </ul>"},{"location":"wrenching/thunderbird-restoration/#07182025","title":"07/18/2025","text":"<ul> <li>Totally ripped apart the suspension and steering on the t-bird, it really didn't give me too much trouble</li> </ul>"},{"location":"wrenching/thunderbird-restoration/#back-burner","title":"Back Burner","text":"<ul> <li>Oil pan gasket, welding in bung</li> <li>Adding relays to headlights</li> <li>Fixing door</li> <li>Headlight covers vacuum</li> <li>Windshield washer bottle</li> <li>Door seals</li> <li>Window Felts</li> <li>New Spark plugs</li> <li>EFI conversion</li> <li>Adding fusible link to Alternator wiring</li> <li>Making a good spares box</li> <li>Making spare alternator wire</li> <li>Cleaning/ organizing trunk junk</li> <li>New wheels and tires</li> <li>Speakers in the back</li> <li>Wiring in Wideband O2 Sensor</li> <li>Arduino project, adding sensors</li> </ul>"},{"location":"wrenching/thunderbird-restoration/#3d-models-stl-files","title":"3D Models &amp; STL Files","text":"<p>Custom 3D printed parts designed for this project:</p> <ul> <li>Rear Ashtray Blank Off Plate - Custom blank off plate to replace brittle rear ashtrays</li> <li>Windshield Wiper Knob - Replacement for broken windshield wiper control knob</li> </ul> <p>View all 3D models and download STL files \u2192</p>"},{"location":"wrenching/thunderbird-restoration/#accomplishments","title":"Accomplishments","text":"<ul> <li>New ignition coil</li> <li>Fixed winshield wiper knob with 3D printed version</li> <li>New windshield wipers</li> <li>Blower motor and controls working</li> <li>Turn signal bulb out in dash</li> <li>Turn signal working intermittently</li> <li>Alternator upgrade</li> <li>Add coolant overflow</li> <li>Exhaust clunking</li> <li>Flushing coolant</li> <li>Brake light on dash</li> <li>Fuel gauge</li> <li>Changing headlight bulbs</li> <li>Drive a bit more, change trans fluid</li> <li>Adding worm clamps to trans cooler lines</li> <li>Change oil</li> <li>Change oil filter</li> <li>Rotors and pads</li> <li>Change diff fluid</li> <li>Better power lines</li> <li>Better grounds</li> <li>Bleed the brakes, inspect</li> <li>Dash lights</li> <li>Rebuild trans</li> <li>Clock</li> <li>Ammeter</li> <li>Electric fan conversion</li> <li>Adding switched power post to engine bay</li> <li>Check ignition timing</li> <li>Making the horn work</li> <li>Finishing driver exhaust</li> <li>Get the gas gauge reading properly</li> <li>Fixing blend door actuator</li> <li>Cleaning up vacuum lines underhood</li> <li>Rear shocks</li> <li>Rear coil springs</li> <li>Make the shifter linkage work better</li> <li>Weld in O2 sensor bung</li> <li>rebuilding the front steering and suspension. It was making an alarming clunk over bumps, and the lower ball joints were definitely cooked. </li> <li>Adding vibration dampeners to brake calibers</li> <li>3D printed blank off for rear ashtrays</li> </ul>"}]}